---
output: html_document
editor_options: 
  chunk_output_type: console
---
# Packages are where functions live {#sec-functions}

The R ecosystem consists of packages. These are collections of functions organized in a systematic manner. Functions are created to perform a specialized task, and packages often have many function used to do e.g. analyses of a specific kind of data, or more general task such as making figures or handle data.

Later in this course we will use many different packages, for example [dplyr](https://dplyr.tidyverse.org/), [tidyr](https://tidyr.tidyverse.org/) and [ggplot2](https://ggplot2.tidyverse.org/). dplyr and tidyr are packages used to transform and clean data. ggplot2 is used for making figures.

## Where do packages live?

To install a package, you use the `install.packages()` function. You only need to do this once on your computer (unless you re-install R). You can write the following code in your console to install dplyr.

```{r, eval = FALSE}
install.packages("dplyr")
```

Alternatively, in RStudio, click "Packages" and "Install" and search for the package you want to install. To use a package, you have to load it into your environment. Use the `library()` function to load a package.

```{r, eval = FALSE}
library("dplyr")
```

The package `dplyr` has now loaded into your environment, this means that all the functions that are part of the `dplyr` package are available for R.

But where do packages comes from? When using `install.packages`, R will look for a package with the your name in a repository that is defined in your options.[^options] A repository is in this case a database from which it is possible to download and install R packages. The repository is likely a mirror of a CRAN repository.

[^options]: The behavior of R is in many cases dictated by options, one such option is the preferred repository for downloading packages, see [here for details](https://search.r-project.org/R/refmans/base/html/options.html)

## Alternatives to CRAN

### Bioconductor

CRAN (Comprehensive R Archive Network) is the go-to database network for R packages, but there are alternatives. [Bioconductor](https://www.bioconductor.org/) collects R packages used in bioinformatics and related fields, and similarly to CRAN we can download packages from Bioconductor using convenient functions. Confusingly, a package named `BiocManager` is available at CRAN. Using `BiocManager::install()`[^noteoncolon] we can install packages from Bioconductor.

[^noteoncolon]: Notice the double colon here (`::`). This means that we are telling R to look for a function inside a package, specifically, look for the function called `install` in the `BiocManager` package. When using `::` we do not need to load the package to access the function.

### GitHub

GitHub is a hosts many R packages, some of which will never be submitted to CRAN for different reasons. Packages hosted on GitHub can also be downloaded and installed using a function provided by the `remotes` package.

First we need to install `remotes`

```{r}
#| eval: false

install.packages("remotes")

```

Next we can use `remotes` to install a package we will use later, a package that contains datasets, the `exscidata` package[^exscidata]

[^exscidata]: See [here](https://github.com/dhammarstrom/exscidata) for the GitHub repository where the package live.

We load the `remotes` package and we can directly download, and install the package.

```{r}
#| eval: false

library(remotes)
install_github("dhammarstrom/exscidata")

```

### Other alternatives

In addition to CRAN, BioConductor and GitHub, R packages are hosted on [rOpenSci](https://ropensci.org/) which is a platform for hosting peer-reviewed R packages. These can also be hosted on CRAN or BioConductor, and at the same time be hosted on GitHub whit a developmental version. Similarly to GitHub, [Gitlab](https://about.gitlab.com/) and [Bitbucket](https://bitbucket.org/) provides possibilities for hosting packages which can be installed using functions in the `remotes` package.  


